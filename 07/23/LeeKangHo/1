__________________________________________________________________________________________

// 컨트롤러 클래스


List<String> areas = Arrays.asList("서울", "부산", "인천", "대구", "대전", "광주", "울산", "세종",
 			"수원", "성남", "고양", "용인", "창원", "청주", "전주", "포항", "천안", "안산", "안양", "남양주");
 	
 	
 	@GetMapping("/")
	public String main(@RequestParam(value = "page", defaultValue = "1") int page,
			@RequestParam(value = "category_code", required = false) String categoryCode,
			Model model) {
	
		totalRecord = this.mapper.products_count();
				
		PageDTO pdto = new PageDTO(page, rowsize, totalRecord);
	
		List<ProductDTO> productlist;
		
	    if(categoryCode == null || categoryCode.isEmpty()) {
	        productlist = mapper.product_list(pdto);  // 전체 제품
	    } else {
	        productlist = mapper.product_list_by_category(categoryCode);  // 카테고리별 제품
	    }	
		
		List<CategoryDTO> category = mapper.category_list();
		

		
		model.addAttribute("productList", productlist)
			.addAttribute("areas", areas)
			.addAttribute("paging", pdto)	
			.addAttribute("category", category)
			.addAttribute("selectedCategory", categoryCode);
		
		return "main";
		
	}
 	
 	
 	
 	
 	@GetMapping("secondhand_list.go")
 	public String secondhandList(
 	    @RequestParam(value = "area", required = false) String area,
 	    @RequestParam(value = "category", required = false) String category,
 	    @RequestParam(value = "keyword", required = false) String keyword,
 	    @RequestParam(value = "page", defaultValue = "1") int page,
 	    Model model
 	) {
 	  
 	    Map<String, String> map = new HashMap<String, String>();
 	    map.put("area", area);        
 	    map.put("category", category);     
 	    map.put("keyword", keyword);  

 	   
 	    totalRecord = this.mapper.products_search_count(map);
 	    
 	    PageDTO pdto = new PageDTO(page, rowsize, totalRecord, area, category, keyword);
 	    
 	    List<ProductDTO> productList = this.mapper.products_search_list(pdto);
 	   
 	    List<CategoryDTO> categorylist = this.mapper.category_list();
 	    
 	    model.addAttribute("productList", productList)
	 	     .addAttribute("area", area)
	 	     .addAttribute("areas", areas)
	 	     .addAttribute("category", category)
	 	     .addAttribute("categorylist", categorylist)
	 	     .addAttribute("paging", pdto)	
	 	     .addAttribute("keyword", keyword);

 	    return "secondhand_search_list";
 	}

__________________________________________________________________________________________

// Mapper 클래스

int products_search_count(Map<String, String> map);

List<ProductDTO> products_search_list(PageDTO pdto);


__________________________________________________________________________________________

// xml

<select id="products_search_count" parameterType="map" resultType="int">
	    select count(*) from transaction_product
	    where 1=1
	    <if test="area != null and area != ''">
            AND sales_area LIKE '%' || #{area} || '%'
        </if>
        <if test="category != null and category != ''">
            AND category_code = #{category}
        </if>
        <if test="keyword != null and keyword != ''">
		  AND REPLACE(product_title, ' ', '') LIKE '%' || REPLACE(#{keyword}, ' ', '') || '%'
		</if>
	</select>
	
	
	
	<!-- 검색 기능 -->
	<select id="products_search_list" parameterType="Page" resultType="Product">
	    SELECT * FROM (
	        SELECT b.*, rownum AS rn FROM (
	            SELECT * FROM transaction_product
	            WHERE 1=1
	            <if test="area != null and area != ''">
	                AND sales_area LIKE '%' || #{area} || '%'
	            </if>
	            <if test="category != null and category != ''">
	                AND category_code = #{category}
	            </if>
	            <if test="keyword != null and keyword != ''">
				  AND REPLACE(product_title, ' ', '') LIKE '%' || REPLACE(#{keyword}, ' ', '') || '%'
				</if>
	            ORDER BY product_date DESC
	        ) b
	        WHERE rownum &lt;= #{endNo}
	    )
	    WHERE rn &gt;= #{startNo}
	</select>





__________________________________________________________________________________________


// hearder.jsp 수정

<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>중고 거래 사이트</title>
<style>
    .header {
        margin: 0;
        padding: 16px 40px;
        background-color: #ffffff;
        border-bottom: 1px solid #e0e0e0;
        display: flex;
        justify-content: space-between;
        align-items: center;
        font-family: 'Segoe UI', sans-serif;
        position: sticky;
        top: 0;
        z-index: 1000;
    }

    .header-title h1 {
        font-size: 35px;
        color: #2b7cff;
        margin: 0;
        cursor: pointer;
        transition: 0.3s ease;
    }

    .header-title h1:hover {
        opacity: 0.8;
    }

    .main-btn {
        display: flex;
        gap: 12px;
    }

    .main-btn button {
        background-color: transparent;
        border: 1px solid #2b7cff;
        padding: 7px 16px;
        border-radius: 6px;
        font-size: 14px;
        color: #2b7cff;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.25s ease;
    }

    .main-btn button:hover {
        background-color: #2b7cff;
        color: white;
    }

    @media screen and (max-width: 768px) {
        .header {
            flex-direction: column;
            align-items: flex-start;
            gap: 12px;
            padding: 20px;
        }

        .header-title h1 {
            font-size: 24px;
        }

        .main-btn {
            flex-wrap: wrap;
        }
    }
</style>
</head>
<body>

    <div class="header">
        <div class="header-title">
            <h1 onclick="location.href='/'">중고마켓</h1>
        </div>
        
        <div class="main-btn">
            <button onclick="location.href='/'">HOME</button>
            <button onclick="location.href='product_sales.go'">물품 판매</button>
            <button onclick="location.href='user_my_page.go'">마이페이지</button>
        </div>
    </div>

</body>
</html>







__________________________________________________________________________________________


// footer.jsp 생성

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>

<!-- footer.jsp -->
<div class="footer">
    <div class="footer-inner">
        <div class="footer-left">
            <h3>중고마켓</h3>
            <p>믿을 수 있는 중고 거래 플랫폼</p>
            <p>© 2025 JungGoMarket</p>
        </div>

        <div class="footer-links">
            <div>
                <h4>회사</h4>
                <ul>
                    <li><a href="#">회사소개</a></li>
                    <li><a href="#">채용</a></li>
                    <li><a href="#">제휴문의</a></li>
                </ul>
            </div>
            <div>
                <h4>고객지원</h4>
                <ul>
                    <li><a href="#">공지사항</a></li>
                    <li><a href="#">자주 묻는 질문</a></li>
                    <li><a href="#">문의하기</a></li>
                </ul>
            </div>
            <div>
                <h4>정책</h4>
                <ul>
                    <li><a href="#">이용약관</a></li>
                    <li><a href="#">개인정보 처리방침</a></li>
                    <li><a href="#">위치기반서비스 약관</a></li>
                </ul>
            </div>
        </div>
    </div>
</div>

<style>
.footer {
    background-color: #f9f9f9;
    border-top: 1px solid #e0e0e0;
    padding: 40px 0;
    margin-top: 50px;
    font-size: 14px;
    color: #555;
}

.footer-inner {
    width: 90%;
    max-width: 1200px;
    margin: auto;
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
}

.footer-left h3 {
    font-size: 20px;
    color: #2b7cff;
    margin-bottom: 8px;
}

.footer-left p {
    margin: 4px 0;
}

.footer-links {
    display: flex;
    gap: 60px;
}

.footer-links h4 {
    margin-bottom: 10px;
    font-size: 15px;
    color: #333;
}

.footer-links ul {
    list-style: none;
    padding: 0;
}

.footer-links li {
    margin-bottom: 6px;
}

.footer-links a {
    color: #555;
    text-decoration: none;
}

.footer-links a:hover {
    color: #2b7cff;
    text-decoration: underline;
}

@media screen and (max-width: 768px) {
    .footer-inner {
        flex-direction: column;
        gap: 30px;
    }

    .footer-links {
        flex-direction: column;
        gap: 30px;
    }
}
</style>


</body>
</html>






__________________________________________________________________________________________

// main.jsp 수정 및 추가


<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %> 
<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt" %>
<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>

<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>중고 전자기기 목록</title>
<style>
    body {
	    font-family: 'Segoe UI', sans-serif;
	    background-color: #f4f7fb;
	    margin: 0;
	    padding: 0;
	}
	
	.main-bar {
	    background-color: white;
	    border-bottom: 1px solid #ddd;
	    padding: 16px 20px;
	}
	
	.main-container {
	    display: flex;
	}


    .sidebar {
        width: 15%;
        padding: 20px;
        background-color: #ffffff;
        border-right: 1px solid #ddd;
        overflow-y: auto;
    }

    .sidebar h3 {
        font-size: 16px;
        margin-bottom: 10px;
    }

    .sidebar label {
        display: block;
        margin-bottom: 6px;
        font-size: 14px;
    }

    .content {
        flex: 1;
        padding: 20px;
    }

    .top-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

    .search-bar input[type="text"] {
        width: 250px;
        padding: 8px 12px;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .search-bar input[type="submit"] {
        padding: 8px 16px;
        background-color: #2b7cff;
        color: white;
        border: none;
        border-radius: 5px;
        margin-left: 8px;
        cursor: pointer;
    }

    .product-count {
        font-size: 15px;
        color: #555;
        margin-right: 10px;
    }

    .product-count strong {
        color: #2b7cff;
    }

    .product-list {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
    }

    .product-card {
        width: calc(20% - 20px);
        background: white;
        border-radius: 10px;
        display: flex;
        flex-direction: column;
        padding: 12px;
        box-shadow: 1px 2px 5px rgba(0,0,0,0.05);
        transition: 0.2s ease;
        box-sizing: border-box;
    }

    .product-card:hover {
        background-color: #eef4ff;
    }

    .product-img {
        width: 100%;
        height: 200px;
        border-radius: 8px;
        object-fit: cover;
        border: 1px solid #ddd;
    }

    .product-info {
        margin-top: 10px;
    }

    .product-info a {
        font-size: 18px;
        font-weight: 600;
        color: #2a2a2a;
        text-decoration: none;
    }

    .product-info a:hover {
        text-decoration: underline;
    }

    .product-meta {
        color: #666;
        font-size: 14px;
        margin-top: 6px;
    }

    .product-price {
        font-weight: bold;
        margin-top: 4px;
        font-size: 16px;
        color: #4e8fe1;
    }

    .settings-btn {
        background-color: #dbe7ff;
        border: none;
        padding: 8px 16px;
        border-radius: 5px;
        cursor: pointer;
    }

    .pagination-wrapper {
        margin: 30px 0;
    }

    .pagination {
        display: inline-flex;
        gap: 6px;
        padding: 10px 20px;
        border-radius: 12px;
        background-color: #f2f7fd;
        box-shadow: 0 2px 8px rgba(0,0,0,0.05);
    }

    .page-btn {
        display: inline-block;
        padding: 8px 14px;
        font-size: 14px;
        font-weight: 500;
        color: #2b7cff;
        background-color: white;
        border: 1px solid #b3d3ff;
        border-radius: 8px;
        text-decoration: none;
        transition: all 0.2s ease;
    }

    .page-btn:hover {
        background-color: #dceaff;
    }

    .page-btn.active {
        background-color: #2b7cff;
        color: white;
        border-color: #2b7cff;
    }

    .page-btn.first,
    .page-btn.last {
        font-weight: bold;
    }
</style>

<script
  src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC6GZL5JoPGTDsQqjhGD-dgKj7hRQSTxfE&callback=initMap"
  async
  defer
  loading="async">
</script>

<!-- 구글 맵스 api 로딩 -->

<script>

	// initMap 함수 선언(전역에 노출되어야 함)  왜 선언 해야하는지 모르겟음 구글 api src 부분의 initmap을 지우면 동읍면 출력에 오류가 생김..
	function initMap() {
		// API가 로드된 후 실행되는 함수임을 콘솔에 알림
	  	console.log("Google Maps API loaded, initMap called.");
	  
	  	// 필요하다면 여기서 초기 작업을 한다.
	}

	function getAddressFromCoords(lat, lng) {
		
		// google maps의 지오코딩 객체 생성 (좌표 -> 주소로 변환 하는 과정)
		const geocoder = new google.maps.Geocoder();
		
		// 위도와 경도를 객체로 구성 
		const latlng = {
				
			lat : parseFloat(lat),   // 위도 (float 타입으로 변환)
			lng: parseFloat(lng) };  // 경도 (위와 같음)
		
		// 위도 경도를 이용해 주소를 요청하는 함수 		
		geocoder.geocode({ location: latlng}, function(results, status){
				
			// 주소 요청 성공시 결과값이 존재할 경우
			if (status === "OK" && results[0]){
				
				// 전체 주소 
				const fullAddress = results[0].formatted_address;
				
				// 전체 주소에서 동/읍/면/리 단위만 추출하는 함수
				const dong = extractDong(fullAddress);
				console.log("사용자 동 :", dong);
				
			} else {
				// 주소 변환 실패시
				console.warn("주소를 찾을 수 없습니다. 상태:", status);
			}
		});
		
	}
	
	function extractDong(address) {
		
		// 동 읍 면 리 를 출력하기 위한 정규 표현식
		const dongPattern = /([가-횡]+[동|읍|면|리])/;
		  
		// 전달받은 전체 주소 문자열에서 해당 패턴이 있는지 매칭 
		const match = address.match(dongPattern);
		
		// 매칭된 결과가 있으면 match[0]을 반환, 없으면 null 을 반환
		return match ? match[0] : null;
		
	}
	
	navigator.geolocation.getCurrentPosition(
			  
		function(position){     // 현 위치를 경도와 위도로 받는 함수

	  		const lat = position.coords.latitude; // 위도
	  		const lng = position.coords.longitude; // 경도
	  
	  		console.log("현재위치", lat, lng);
	 
	  		getAddressFromCoords(lat, lng); // 위도와 경도값을 주소정보를 얻는 함수 
	 
		}, function(error) {  // 위치 정보 접근에 실패 했을 때 실행 되는 함수.

			console.error("위치 정보 접근 실패", error);
		});
	
</script>

</head>
<body>

	<div class="main-bar">
		<jsp:include page="include/header.jsp" />
	</div>
	
	<div class="main-container">
		<div class="sidebar">
		
		    <form method="get" action="secondhand_list.go">
		      <h3>지역 선택</h3>
				<c:forEach var="a" items="${areas}">
				    <label>
				        <input type="radio" name="area" value="${a}"
				               onchange="this.form.submit()"
				               <c:if test="${area == a}">checked</c:if>> ${a}
				    </label>
				</c:forEach>

		        
		
		        <hr>
		        <h3>카테고리</h3>
		        <c:forEach var="c" items="${category}">
		            <label>
		                <input type="radio" name="category" value="${c.category_code}" onchange="this.form.submit()">
		                ${c.category_name}
		            </label>
		        </c:forEach>
		    </form>
		</div>
		
		<div class="content">
		
		    <h1>중고 전자기기</h1>
		
		    <div class="top-bar">
		        <form class="search-bar" method="get" action="secondhand_list.go">
		            <input type="text" name="keyword" placeholder="제품명을 입력하세요">
		            <input type="submit" value="검색">
		        </form>
		
		        <div style="display: flex; align-items: center; gap: 20px;">
		            <div class="product-count">총 <strong>${paging.totalRecord}</strong>개 상품</div>
		            <button class="settings-btn" onclick="location.href='user_login.go'">로그인</button>
		        </div>
		    </div>
		
		    <div class="product-list">
		        <c:forEach var="p" items="${productList}">
		        	<c:set var="imgList" value="${fn:split(p.product_img, ',')}" />
		            <div class="product-card">
		                <img src="<%=request.getContextPath() %>resources/upload/${imgList[0]}" width="260px" height="260px">
		                <div class="product-info">
		                    <a href="product_detail.go?product_num=${p.product_num}">${p.product_title}</a>
		                    <fmt:formatDate value="${p.product_date}" pattern="a h:mm" var="formattedTime" />
							<div class="product-meta">${p.sales_area} · ${formattedTime}</div>
		                    <div class="product-price"><fmt:formatNumber value="${p.sales_price}" type="number" />원</div>
		                </div>
		            </div>
		        </c:forEach>
		    </div>
		
		    <br><br>
		
		    <div class="pagination-wrapper" align="center">
		        <div class="pagination">
		            <c:if test="${paging.page > paging.block}">
		                <a href="?page=1" class="page-btn first">처음</a>
		                <a href="?page=${paging.startBlock - 1}" class="page-btn">◀</a>
		            </c:if>
		
		            <c:forEach begin="${paging.startBlock}" end="${paging.endBlock}" var="i">
		                <c:choose>
		                    <c:when test="${i == paging.page}">
		                        <a href="?page=${i}" class="page-btn active">${i}</a>
		                    </c:when>
		                    <c:otherwise>
		                        <a href="?page=${i}" class="page-btn">${i}</a>
		                    </c:otherwise>
		                </c:choose>
		            </c:forEach>
		
		            <c:if test="${paging.endBlock < paging.allPage}">
		                <a href="?page=${paging.endBlock + 1}" class="page-btn">▶</a>
		                <a href="?page=${paging.allPage}" class="page-btn last">마지막</a>
		            </c:if>
		        </div>
		    </div>
		
		</div>
	</div>



<jsp:include page="include/footer.jsp" />

</body>
</html>








__________________________________________________________________________________________


// secondhand_search_list.jsp 생성


<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %> 
<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt" %>
<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>

<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>중고 전자기기 목록</title>
<style>
body {
	    font-family: 'Segoe UI', sans-serif;
	    background-color: #f4f7fb;
	    margin: 0;
	    padding: 0;
	}
	
	.main-bar {
	    background-color: white;
	    border-bottom: 1px solid #ddd;
	    padding: 16px 20px;
	}
	
	.main-container {
	    display: flex;
	}


    .sidebar {
        width: 15%;
        padding: 20px;
        background-color: #ffffff;
        border-right: 1px solid #ddd;
        overflow-y: auto;
    }

    .sidebar h3 {
        font-size: 16px;
        margin-bottom: 10px;
    }

    .sidebar label {
        display: block;
        margin-bottom: 6px;
        font-size: 14px;
    }

    .content {
        flex: 1;
        padding: 20px;
    }

    .top-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

    .search-bar input[type="text"] {
        width: 250px;
        padding: 8px 12px;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .search-bar input[type="submit"] {
        padding: 8px 16px;
        background-color: #2b7cff;
        color: white;
        border: none;
        border-radius: 5px;
        margin-left: 8px;
        cursor: pointer;
    }

    .product-count {
        font-size: 15px;
        color: #555;
        margin-right: 10px;
    }

    .product-count strong {
        color: #2b7cff;
    }

    .product-list {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
    }

    .product-card {
        width: calc(20% - 20px);
        background: white;
        border-radius: 10px;
        display: flex;
        flex-direction: column;
        padding: 12px;
        box-shadow: 1px 2px 5px rgba(0,0,0,0.05);
        transition: 0.2s ease;
        box-sizing: border-box;
    }

    .product-card:hover {
        background-color: #eef4ff;
    }

    .product-img {
        width: 100%;
        height: 200px;
        border-radius: 8px;
        object-fit: cover;
        border: 1px solid #ddd;
    }

    .product-info {
        margin-top: 10px;
    }

    .product-info a {
        font-size: 18px;
        font-weight: 600;
        color: #2a2a2a;
        text-decoration: none;
    }

    .product-info a:hover {
        text-decoration: underline;
    }

    .product-meta {
        color: #666;
        font-size: 14px;
        margin-top: 6px;
    }

    .product-price {
        font-weight: bold;
        margin-top: 4px;
        font-size: 16px;
        color: #4e8fe1;
    }

    .settings-btn {
        background-color: #dbe7ff;
        border: none;
        padding: 8px 16px;
        border-radius: 5px;
        cursor: pointer;
    }

    .pagination-wrapper {
        margin: 30px 0;
    }

    .pagination {
        display: inline-flex;
        gap: 6px;
        padding: 10px 20px;
        border-radius: 12px;
        background-color: #f2f7fd;
        box-shadow: 0 2px 8px rgba(0,0,0,0.05);
    }

    .page-btn {
        display: inline-block;
        padding: 8px 14px;
        font-size: 14px;
        font-weight: 500;
        color: #2b7cff;
        background-color: white;
        border: 1px solid #b3d3ff;
        border-radius: 8px;
        text-decoration: none;
        transition: all 0.2s ease;
    }

    .page-btn:hover {
        background-color: #dceaff;
    }

    .page-btn.active {
        background-color: #2b7cff;
        color: white;
        border-color: #2b7cff;
    }

    .page-btn.first,
    .page-btn.last {
        font-weight: bold;
    }
</style>
</head>
<body>

	<div class="main-bar">
		<jsp:include page="include/header.jsp" />
	</div>
	
	<div class="main-container">
		<div class="sidebar">
		    <form method="get" action="secondhand_list.go">
		        <input type="hidden" name="keyword" value="${keyword}" />
		        <h3>지역 선택</h3>
		        <c:forEach var="a" items="${areas}">
		        
		            <label>
		                <input type="radio" name="area" value="${a}"
		                       onchange="this.form.submit()"
		                       <c:if test="${area == a}">checked</c:if>> ${a}
		            </label>
		        </c:forEach>

		        <hr>
		        <h3>카테고리</h3>
		        <c:forEach var="c" items="${categorylist}">
		            <label>
		                <input type="radio" name="category" value="${c.category_code}"
		                       onchange="this.form.submit()"
		                       <c:if test="${category == c.category_code}">checked</c:if>>
		                ${c.category_name}
		            </label>
		        </c:forEach>
		    </form>
		</div>
		
		<div class="content">
		    <h1>중고 전자기기</h1>
		
		    <div class="top-bar">
		        <form class="search-bar" method="get" action="secondhand_list.go">
		            <input type="text" name="keyword" placeholder="제품명을 입력하세요" value="${keyword}">
		            <c:if test="${not empty area}">
		                <input type="hidden" name="area" value="${area}">
		            </c:if>
		            <c:if test="${not empty category}">
		                <input type="hidden" name="category" value="${category}">
		            </c:if>
		            <input type="submit" value="검색">
		        </form>

		        <div style="display: flex; align-items: center; gap: 20px;">
		            <div class="product-count">총 <strong>${paging.totalRecord}</strong>개 상품</div>
		            <button class="settings-btn" onclick="location.href='user_login.go'">로그인</button>
		        </div>
		    </div>
		
		    <div class="product-list">
		        <c:forEach var="p" items="${productList}">
		            <c:set var="imgList" value="${fn:split(p.product_img, ',')}" />
		            <div class="product-card">
		                <img src="<%=request.getContextPath()%>/resources/upload/${imgList[0]}" class="product-img">
		                <div class="product-info">
		                    <a href="product_detail.go?product_num=${p.product_num}">${p.product_title}</a>
		                    <fmt:formatDate value="${p.product_date}" pattern="a h:mm" var="formattedTime" />
							<div class="product-meta">${p.sales_area} · ${formattedTime}</div>
		                    <div class="product-price"><fmt:formatNumber value="${p.sales_price}" type="number" />원</div>
		                </div>
		            </div>
		        </c:forEach>
		    </div>

		    <div class="pagination-wrapper" align="center">
		        <div class="pagination">
		            <c:if test="${paging.page > paging.block}">
		                <a href="secondhand_list.go?page=1&area=${area}&category=${category}&keyword=${keyword}" class="page-btn first">처음</a>
		                <a href="secondhand_list.go?page=${paging.startBlock - 1}&area=${area}&category=${category}&keyword=${keyword}" class="page-btn">◀</a>
		            </c:if>
		
		            <c:forEach begin="${paging.startBlock}" end="${paging.endBlock}" var="i">
		                <c:choose>
		                    <c:when test="${i == paging.page}">
		                        <a href="#" class="page-btn active">${i}</a>
		                    </c:when>
		                    <c:otherwise>
		                        <a href="secondhand_list.go?page=${i}&area=${area}&category=${category}&keyword=${keyword}" class="page-btn">${i}</a>
		                    </c:otherwise>
		                </c:choose>
		            </c:forEach>
		
		            <c:if test="${paging.endBlock < paging.allPage}">
		                <a href="secondhand_list.go?page=${paging.endBlock + 1}&area=${area}&category=${category}&keyword=${keyword}" class="page-btn">▶</a>
		                <a href="secondhand_list.go?page=${paging.allPage}&area=${area}&category=${category}&keyword=${keyword}" class="page-btn last">마지막</a>
		            </c:if>
		        </div>
		    </div>
		
		</div>
	</div>

<jsp:include page="include/footer.jsp" />



</body>
</html>








__________________________________________________________________________________________



// Page 클래스 (복사 붙여넣기)

package com.boot.transaction.model;

import java.util.List;

import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
public class PageDTO {

	// 페이징 처리 작업 관련 멤버 선언.
	private int page;                   // 현재 페이지
	private int rowsize;                // 한 페이지당 보여질 게시물의 수
	private int totalRecord;            // 테이블 전체 게시물의 수
	private int startNo;                // 해당 페이지에서 시작 번호
	private int endNo;                  // 해당 페이지에서 끝 번호
	private int startBlock;             // 해당 페이지에서 시작 블럭
	private int endBlock;               // 해당 페이지에서 끝 블럭
	private int allPage;                // 전체 페이지 수
	private int block = 3;              // 아래에 보여질 최대 페이지 수
	
	private String area;				// 검색 영역
	private String category;				// 검색 영역
	private String keyword;				// 검색 키워드
	
	// 일반적인 페이징 처리 인자 생성자
	public PageDTO(int page, int rowsize, int totalRecord) {
		
		this.page = page;
		this.rowsize = rowsize;
		this.totalRecord = totalRecord;
		
		// 해당 페이지에서 시작 번호.
		this.startNo = (this.page * this.rowsize) - (this.rowsize - 1);
		
		// 해당 페이지에서 끝 번호.
		this.endNo = (this.page * this.rowsize);
		
		// 해당 페이지에서 시작 블럭
		this.startBlock = 
				(((this.page - 1) / this.block) * this.block) + 1;
		
		// 해당 페이지에서 끝 블럭
		this.endBlock = 
				(((this.page - 1) / this.block) * this.block) + this.block;
		
		// 전체 페이지 수 얻어오는 과정
		this.allPage =
				(int)Math.ceil(this.totalRecord / (double)this.rowsize);
		
		// 전체 페이지 수보다 endBlock이 큰 경우
		if(this.endBlock > this.allPage) {
			this.endBlock = this.allPage;
		}
		
	}  // 일반적인 페이징 처리 인자 생성자
	
	
	// 검색을 하는 페이징 처리 인자 생성자
	public PageDTO(int page, int rowsize, int totalRecord,
				String area, String category, String keyword) {
		
		this(page, rowsize, totalRecord);
		this.area = area;
		this.category = category;
		this.keyword = keyword;
		
	}  // 인자 생성자

}







__________________________________________________________________________________________
