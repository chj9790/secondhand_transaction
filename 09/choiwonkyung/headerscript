 <script>
     function initMap() {
    	  
    	    console.log("[initMap] 함수 시작");

    	    const locDiv = document.getElementById("user-location");
    	    console.log("[initMap] locationEl (at initMap start):", locDiv);

    	    if (locDiv) {
    	        locDiv.textContent = "현재 위치: 위치 정보를 가져오는 중...";
    	        console.log("[initMap] 위치 정보를 가져오는 중... 텍스트 설정 완료");
    	    }

    	    if (navigator.geolocation) {
    	        console.log("[initMap] navigator.geolocation 사용 가능");
    	        navigator.geolocation.getCurrentPosition(
    	            pos => {
    	                const lat = pos.coords.latitude;
    	                const lng = pos.coords.longitude;
    	                console.log("[initMap] 위치 정보 획득:", lat, lng);
    	                getAddressFromCoords(lat, lng);
    	            },
    	            err => {
    	                console.error("[initMap] 위치 접근 실패:", err.message);
    	                if (locDiv) {
    	                    locDiv.textContent = `위치 정보 접근 실패: ${err.message}`;
    	                    if (err.code === err.PERMISSION_DENIED) {
    	                        locDiv.textContent = "위치 정보 접근이 거부되었습니다. 브라우저 설정에서 위치 권한을 허용해주세요.";
    	                    }
    	                }
    	            },
    	            { enableHighAccuracy: true, timeout: 5000, maximumAge: 0 }
    	        );
    	    } else {
    	        console.log("[initMap] 현재 브라우저에서 위치 정보 기능 미지원");
    	        if (locDiv) {
    	            locDiv.textContent = "현재 브라우저에서 위치 정보 기능을 지원하지 않습니다.";
    	        }
    	    }
    	    console.log("[initMap] 함수 종료");
    	}

     function getAddressFromCoords(lat, lng) {
         console.log("[getAddressFromCoords] 호출됨, 좌표:", lat, lng);
         const geocoder = new google.maps.Geocoder();
         const latlng = { lat: parseFloat(lat), lng: parseFloat(lng) };
         const locationEl = document.getElementById("user-location");

         geocoder.geocode({ location: latlng }, (results, status) => {
             console.log("[getAddressFromCoords] geocode 결과 수:", results.length, "상태:", status);
             if (status === "OK" && results.length > 5) {
                 let fullAddress = results[5].formatted_address;
                 fullAddress = fullAddress.replace('대한민국 ', '');
                 
                 if (locationEl) {
                     locationEl.innerHTML = "현재 위치: <strong>" + fullAddress + "</strong>";
                     window.userLocationFullAddress = fullAddress;
                     console.log("[getAddressFromCoords] 위치 텍스트 업데이트 완료:", fullAddress);

                     // 구 이름만 추출하기
                     const guName = extractGuName(fullAddress);
						if (guName) {
						    console.log("[getAddressFromCoords] 추출된 구 이름:", guName);
						    // 문자열 연결로 변경
						    fetch('/region/search?address=' + encodeURIComponent(guName))
						    .then(res => {
						        console.log("[fetch] 서버 응답 상태:", res.status);
						        return res.json();
						    })
						    .then(data => {
						       
						    	 const dongNames = data
						         .map(item => {
						           // item.name 에서 '동'으로 끝나는 부분만 추출 (ex: '경기도 고양시 일산동구 식사동' -> '식사동')
						           const match = item.name.match(/([가-힣]+(동|면|리))$/);
						           return match ? match[1] : null;
						         })
						         .filter(name => name !== null);

						       console.log("[fetch] 동 이름 목록:", dongNames);
						        
						        
						        
						        
						        // TODO: 받은 data를 UI에 반영하는 코드 작성
						    })
						    .catch(err => {
						        console.error("[fetch] 에러 발생:", err);
						    });
						} else {
						    console.warn("[getAddressFromCoords] 구 이름 추출 실패");
						}
                 }
             } else {
                 console.error("[getAddressFromCoords] Geocoder 실패 상태:", status);
             }
         });
     }
     
     
     function extractGuName(fullAddress) {
         console.log("[extractGuName] 호출됨, fullAddress:", fullAddress);
         const guMatch = fullAddress.match(/([가-힣]+(구|군))/);
         if (guMatch) {
             console.log("[extractGuName] 구 이름 추출 성공:", guMatch[1]);
             return guMatch[1];
         } else {
             console.warn("[extractGuName] 구 이름 추출 실패");
             return null;
         }
     }

    	function getUserLocationText() {
    	    console.log("[getUserLocationText] 호출됨");
    	    const locEl = document.getElementById('user-location');
    	    if (!locEl) {
    	        console.log("[getUserLocationText] 위치 요소가 없음");
    	        return null;
    	    }
    	    const text = locEl.textContent || locEl.innerText || "";
    	    const prefix = "현재 위치: ";
    	    if (text.startsWith(prefix)) {
    	        const result = text.substring(prefix.length).trim();
    	        console.log("[getUserLocationText] 위치 텍스트 추출 성공:", result);
    	        return result;
    	    }
    	    console.log("[getUserLocationText] 위치 텍스트가 예상 형식이 아님");
    	    return null;
    	}
    	
    	
    	
    	
    	window.onload = function() {
    	    initMap();
    	};
      

    </script>
